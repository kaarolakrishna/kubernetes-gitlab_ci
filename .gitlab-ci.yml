image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - release
  - staging
  - production

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/$CI_USER_OR_GROUP/docker-example:$CI_BUILD_REF
  CONTAINER_NAMED_IMAGE: $CI_REGISTRY/$CI_USER_OR_GROUP/docker-example:$CI_BUILD_REF_NAME
  CONTAINER_TAG_IMAGE: $CI_REGISTRY/$CI_USER_OR_GROUP/docker-example:$CI_BUILD_TAG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/$CI_USER_OR_GROUP/docker-example:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  except:
    - tags

test1:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE echo "test1"
  except:
    - tags

test2:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE echo "test2"
  except:
    - tags

release-branch:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_NAMED_IMAGE
    - docker push $CONTAINER_NAMED_IMAGE
  except:
    - master

release-master:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

release-tag:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_TAG_IMAGE
    - docker push $CONTAINER_TAG_IMAGE
  only:
    - tags

deploy-staging:
  stage: staging
  script:
    - docker run -e DOCKERCLOUD_USER -e DOCKERCLOUD_API dockercloud/cli stack redeploy my-staging-app
  only:
    - master
  except:
    - tags

deploy-prod:
  stage: production
  script:
    - docker run -e DOCKERCLOUD_USER -e DOCKERCLOUD_API dockercloud/cli stack redeploy my-prod-app
  only:
    - tags
